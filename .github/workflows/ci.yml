name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Run linter
        working-directory: ./frontend
        run: npm run lint
      
      - name: Run type check
        working-directory: ./frontend
        run: npm run type-check
      
      - name: Run tests
        working-directory: ./frontend
        run: npm test
      
      - name: Build
        working-directory: ./frontend
        run: npm run build

  ai-service-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: ai-service/requirements.txt
      
      - name: Install dependencies
        working-directory: ./ai-service
        run: |
          pip install -r requirements.txt
      
      - name: Run linter
        working-directory: ./ai-service
        run: |
          ruff check .
          black --check .
      
      - name: Run type check
        working-directory: ./ai-service
        run: mypy .
      
      - name: Run tests
        working-directory: ./ai-service
        run: pytest --cov

  docker-build:
    runs-on: ubuntu-latest
    needs: [frontend-test, ai-service-test]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build frontend image
        working-directory: ./frontend
        run: docker build -t offgrid/frontend:latest --target production .
      
      - name: Build AI service image
        working-directory: ./ai-service
        run: docker build -t offgrid/ai-service:latest .
