# ============================================
# VAULT-BASED CONFIGURATION
# ============================================
# This project uses HashiCorp Vault for secrets management.
# Secrets are NO LONGER stored in .env files.
#
# Setup Instructions:
# 1. Ensure Vault server is running at http://localhost:8200
# 2. Create .env.vault file with AppRole credentials (see .env.vault.example)
# 3. Run: docker-compose up
#
# All secrets (database passwords, API keys, etc.) are automatically
# loaded from Vault at runtime using AppRole authentication.
# ============================================

# Environment
ENVIRONMENT=development
NODE_ENV=development
LOG_LEVEL=info

# URLs
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WP_URL=http://localhost:8080

# Database Configuration (non-secret values)
DB_NAME=wordpress
DB_USER=wpuser

# WordPress Configuration (non-secret values)
WP_ADMIN_USER=admin
WP_DEBUG=false

# ============================================
# VAULT INTEGRATION
# ============================================
# Secrets are stored in Vault at these paths:
#
# offgrid/database       - DB_ROOT_PASSWORD, DB_PASSWORD
# offgrid/wordpress      - WP_ADMIN_PASSWORD, WP_AUTH_KEY, etc.
# offgrid/ai-service     - OPENAI_API_KEY, ANTHROPIC_API_KEY
# offgrid/frontend       - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY, JWT_SECRET
# offgrid/stripe         - STRIPE_SECRET_KEY, STRIPE_WEBHOOK_SECRET
#
# Vault authentication uses AppRole credentials in .env.vault:
# - AI_SERVICE_ROLE_ID / AI_SERVICE_SECRET_ID
# - FRONTEND_ROLE_ID / FRONTEND_SECRET_ID  
# - WORDPRESS_ROLE_ID / WORDPRESS_SECRET_ID
# - MYSQL_ROLE_ID / MYSQL_SECRET_ID
# ============================================
